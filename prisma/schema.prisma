generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER") // Modifié pour avoir "USER" par défaut
  active    Boolean  @default(true)   // Ajouté pour gérer les comptes désactivés
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime? // Ajouté pour suivre les connexions

  // Relations possibles (exemple)
  // posts      Post[]
  // sessions   Session[]

  @@map("users")
}

enum ProjectStatus {
  EN_ATTENTE
  EN_COURS
  TERMINE
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  technologies Json  // JSON string for SQLite compatibility
  client      String
  duration    String
  status      ProjectStatus
  imageUrl    String?
  url         String?
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

enum MessageStatus {
  NOUVEAU
  LU
  TRAITE
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  company   String?
  subject   String
  message   String
  status    MessageStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contact_messages")
}

model Upload {
  id           String   @id @default(cuid())
  filename     String   @unique
  originalName String
  mimeType     String
  size         Int
  path         String
  url          String
  projectId    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("uploads")
}

