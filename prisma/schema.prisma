generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER") // Modifié pour avoir "USER" par défaut
  active    Boolean  @default(true)   // Ajouté pour gérer les comptes désactivés
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime? // Ajouté pour suivre les connexions

  // Relations possibles (exemple)
  // posts      Post[]
  // sessions   Session[]

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  technologies Json  // JSON string for SQLite compatibility
  client      String
  duration    String
  status      String   @default("EN_ATTENTE") // String instead of enum
  imageUrl    String?
  url         String?
  date        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  company   String?
  subject   String
  message   String
  status    String   @default("NOUVEAU") // String instead of enum
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contact_messages")
}

model Upload {
  id           String   @id @default(cuid())
  filename     String   @unique
  originalName String
  mimeType     String
  size         Int
  path         String
  url          String
  projectId    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("uploads")
}

model ProjectImage {
  id          String   @id @default(cuid())
  filename    String
  mimetype    String
  size        Int
  data        Bytes    // Le contenu binaire de l'image
  project     Project? @relation(fields: [projectId], references: [id])
  projectId   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
